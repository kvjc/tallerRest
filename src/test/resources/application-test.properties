spring.application.name=demo1
server.port=8080
app.environment=test

# Data Source
# spring.datasource.url=jdbc:postgresql://localhost:5432/test_compu2
# spring.datasource.username=postgres
# spring.datasource.password=postgres
# spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.driver-class-name=org.h2.Driver
# Or jdbc:h2:./db-kevin;DB_CLOSE_DELAY=-1
# Is DB_CLOSE_DELAY=-1 necessary? What does it do? It is useful to keep the database open after the last connection is closed.
spring.datasource.url=jdbc:h2:mem:db-test;DB_CLOSE_DELAY=-1
spring.datasource.username=postgres
spring.datasource.password=postgres
# None, create, update, create-drop
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.jpa.show-sql=false
# This property is used to defer the datasource initialization until after the application context is ready.
spring.jpa.defer-datasource-initialization=true
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# logging.level.org.hibernate.engine.transaction.internal=DEBUG
# Logging de las peticiones entrantes
# This is for all the project
logging.level.root = WARN 
# Spring level
logging.level.org.springframework.web=INFO
# Package level
logging.level.com.example.demo1 = DEBUG

logging.file.name=logs/demo1.log
logging.file.path=logs
logging.pattern.dateformat=yyyy-MM-dd HH:mm:ss.SSS

spring.datasource.hikari.maximum-pool-size=10

spring.datasource.hikari.minimum-idle=5

spring.datasource.hikari.idle-timeout=30000

spring.datasource.hikari.max-lifetime=1800000

spring.datasource.hikari.connection-timeout=20000
